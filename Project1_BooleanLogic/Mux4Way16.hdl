// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
    Mux16(a= a[0..15],b= b[0..15],sel= sel[0] ,out= outAB);
    Mux16(a= c[0..15],b= d[0..15],sel= sel[0] ,out= outCD);
    Not(in= sel[1],out= selHNot);
    And16(a= outAB,
          b[0]= selHNot,
	  b[1]= selHNot,
          b[2]= selHNot,
          b[3]= selHNot,
          b[4]= selHNot,
          b[5]= selHNot,
          b[6]= selHNot,
          b[7]= selHNot,
          b[8]= selHNot,
    	  b[9]= selHNot,
	  b[10]= selHNot,
	  b[11]= selHNot,
	  b[12]= selHNot,
	  b[13]= selHNot,
	  b[14]= selHNot,
	  b[15]= selHNot,out= ABResult);
    And16(a= outCD,
          b[0]= sel[1],
	  b[1]= sel[1],
 	  b[2]= sel[1],
	  b[3]= sel[1],
	  b[4]= sel[1],
	  b[5]= sel[1],
	  b[6]= sel[1],
	  b[7]= sel[1],
	  b[8]= sel[1],
	  b[9]= sel[1],
	  b[10]= sel[1],
	  b[11]= sel[1],
	  b[12]= sel[1],
	  b[13]= sel[1],
	  b[14]= sel[1],
	  b[15]= sel[1],out= CDResult);
    Or16(a= ABResult,b= CDResult,out= out);
}