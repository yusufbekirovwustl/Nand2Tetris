// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    Mux4Way16(a= a[0..15],b= b[0..15],c= c[0..15],d= d[0..15],sel= sel[0..1],out= outMuxABCD ); /* Selects between four 16-bit inputs */
    Mux4Way16(a= e[0..15],b= f[0..15],c= g[0..15],d= h[0..15],sel= sel[0..1],out= outMuxEFGH ); /* Selects between four 16-bit inputs */
    Not(in= sel[2],out= selHNot);
    And16(a= outMuxABCD,
          b[0]= selHNot,
	  b[1]= selHNot,
          b[2]= selHNot,
          b[3]= selHNot,
          b[4]= selHNot,
          b[5]= selHNot,
          b[6]= selHNot,
          b[7]= selHNot,
          b[8]= selHNot,
    	  b[9]= selHNot,
	  b[10]= selHNot,
	  b[11]= selHNot,
	  b[12]= selHNot,
	  b[13]= selHNot,
	  b[14]= selHNot,
	  b[15]= selHNot,
          out= ABCDResult);
    And16(a= outMuxEFGH,
          b[0]= sel[2],
	  b[1]= sel[2],
 	  b[2]= sel[2],
	  b[3]= sel[2],
	  b[4]= sel[2],
	  b[5]= sel[2],
	  b[6]= sel[2],
	  b[7]= sel[2],
	  b[8]= sel[2],
	  b[9]= sel[2],
	  b[10]= sel[2],
	  b[11]= sel[2],
	  b[12]= sel[2],
	  b[13]= sel[2],
	  b[14]= sel[2],
	  b[15]= sel[2],
          out= EFGHResult);
    Or16(a= ABCDResult,b= EFGHResult,out= out);
}